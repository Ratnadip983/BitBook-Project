@model BitBookProj.Models.User

@{
    ViewBag.Title = "ChangePassword";
}

<h2>Change Password</h2>

@using (Html.BeginForm("ChangePassword","Users",FormMethod.Post ,new { id = "changePasswordform" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Change your Password</h4>
        <hr />
       
        <div class="form-group">
            @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Password", new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })*@
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("ConfirmPassword", new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })*@
            </div>
        </div>
      
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $(document)
        .ready(function() {
            $("#changePasswordform")
                .validate({
                    rules: {
                        Password: {
                            required: true,
                            minlength: 6
                        },
                        ConfirmPassword: {
                            required: true,
                            minlength: 6,
                            equalTo: "#Password"
                        }
                    },
                    messages: {
                        Password: {
                            required: "Please provide a password",
                            minlength: "Your password must be at least 6 characters long"
                        },
                        ConfirmPassword: {
                            required: "Please provide a password",
                            minlength: "Your password must be at least 6 characters long",
                            equalTo: "Please enter the same password as above"
                        }
                    }
                });
        });
</script>

